{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"methodaws Documentation","text":"<p>Hello and welcome to the methodaws documentation. While we always want to provide the most comprehensive documentation possible, we thought you may find the below sections a helpful place to get started.</p> <ul> <li>The Getting Started section provides onboarding material</li> <li>The Development header is the best place to get started on developing on top of and with methodaws</li> <li>See the Docs section for a comprehensive rundown of methodaws capabilities</li> </ul>"},{"location":"index.html#about-methodaws","title":"About methodaws","text":"<p>methodaws provides security operators with a number of data-rich AWS enumeration capabilities to help them gain visibility into their AWS environments. Designed with data-modeling and data-integration needs in mind, methodaws can be used on its own as an interactive CLI, orchestrated as part of a broader data pipeline, or leveraged from within the Method Platform.</p> <p>The number of security-relevant AWS resources that methodaws can enumerate are constantly growing. For the most up to date listing, please see the documentation here</p> <p>To learn more about methodaws, please see the Documentation site for the most detailed information.</p>"},{"location":"index.html#quick-start","title":"Quick Start","text":""},{"location":"index.html#get-methodaws","title":"Get methodaws","text":"<p>For the full list of available installation options, please see the Installation page. For convenience, here are some of the most commonly used options:</p> <ul> <li><code>docker run methodsecurity/methodaws</code></li> <li><code>docker run ghcr.io/method-security/methodaws</code></li> <li>Download the latest binary from the Github Releases page</li> <li>Installation documentation</li> </ul>"},{"location":"index.html#authentication","title":"Authentication","text":"<p>methodaws is built using the AWS Go SDK and leverages the same AWS Credentials that are used by the AWS CLI. Specifically, it looks for the proper environment variables to be exported with credential information. For more information, please see the AWS documentation on how to export AWS credentials as environment variables.</p>"},{"location":"index.html#general-usage","title":"General Usage","text":"<pre><code>methodaws &lt;resource&gt; enumerate --region &lt;AWS Region&gt;\n</code></pre>"},{"location":"index.html#examples","title":"Examples","text":"<pre><code>methodaws s3 enumerate --region us-east-1\n</code></pre> <pre><code>methodaws ec2 enumerate --region us-east-1\n</code></pre>"},{"location":"index.html#contributing","title":"Contributing","text":"<p>Interested in contributing to methodaws? Please see our organization wide Contribution page.</p>"},{"location":"index.html#want-more","title":"Want More?","text":"<p>If you're looking for an easy way to tie methodaws into your broader cybersecurity workflows, or want to leverage some autonomy to improve your overall security posture, you'll love the broader Method Platform.</p> <p>For more information, visit us here</p>"},{"location":"index.html#community","title":"Community","text":"<p>methodaws is a Method Security open source project.</p> <p>Learn more about Method's open source source work by checking out our other projects here or our organization wide documentation here.</p> <p>Have an idea for a Tool to contribute? Open a Discussion here.</p>"},{"location":"community/community.html","title":"Contributing","text":"<p>For more information on how to get involved in the Method community, please see our organization wide documentation:</p> <ul> <li>Discussions</li> <li>Issues</li> <li>Pull Requests</li> </ul>"},{"location":"development/adding.html","title":"Adding a new capability","text":"<p>By design, methodaws breaks every unique AWS resource into its own top level command. If you are looking to add a brand new capability to the tool, you can take the following steps.</p> <ol> <li>Add a file to <code>cmd/</code> that corresponds to the sub-command name you'd like to add to the <code>methodaws</code> CLI</li> <li>You can use <code>cmd/ec2.go</code> as a template</li> <li>Your file needs to be a member function of the <code>methodaws</code> struct and should be of the form <code>Init&lt;cmd&gt;Command</code></li> <li>Add a new member to the <code>methodaws</code> struct in <code>cmd/root.go</code> that corresponsds to your command name. Remember, the first letter must be capitalized.</li> <li>Call your <code>Init</code> function from <code>main.go</code></li> <li>Add logic to your commands runtime and put it in its own package within <code>internal</code> (e.g., <code>internal/ec2</code>)</li> </ol>"},{"location":"development/principles.html","title":"Project Principles","text":""},{"location":"development/principles.html#pre-run-run-post-run","title":"Pre-run -&gt; Run -&gt; Post-run","text":"<p>In the root command, we set a <code>PersistentPreRunE</code> and <code>PersistentPostRunE</code> function that is responsible for initializing the output format and Signal data (in the pre-run) and then write that data in the proper format (in the post-run).</p> <p>Within the Run command that every command must implement, the output of the collected data needs to be written back to the struct's <code>OutputSignal.Content</code> value in order to be properly written out to the caller.</p>"},{"location":"development/principles.html#cmd-vs-internal","title":"Cmd vs Internal","text":"<p>By design, the functionality within each command should focus around parsing the variety of flags and options that the command may need to control capability, passing off all real logic into internal modules.</p>"},{"location":"development/setup.html","title":"Development Setup","text":""},{"location":"development/setup.html#adding-a-new-capability","title":"Adding a new capability","text":"<p>To add a new AWS capability to methodaws, providing new enumeration capabilities to security operators everywhere, please see the adding a new capability page.</p>"},{"location":"development/setup.html#setting-up-your-development-environment","title":"Setting up your development environment","text":"<p>If you've just cloned methodaws for the first time, welcome to the community! We use Palantir's godel to streamline local development and goreleaser to handle the heavy lifting on the release process.</p> <p>To get started with godel, you can run</p> <pre><code>./godelw verify\n</code></pre> <p>This will run a number of checks for us, including linters, tests, and license checks. We run this command as part of our CI pipeline to ensure the codebase is consistently passing tests.</p>"},{"location":"development/setup.html#building-the-cli","title":"Building the CLI","text":"<p>We can use godel to build our CLI locally by running</p> <pre><code>./godelw build\n</code></pre> <p>You should see output in <code>out/build/methoaws/&lt;version&gt;/&lt;os&gt;-&lt;arch&gt;/methodaws</code>.</p> <p>If you'd like to clean this output up, you can run</p> <pre><code>./godelw clean\n</code></pre>"},{"location":"development/setup.html#testing-releases-locally","title":"Testing releases locally","text":"<p>We can use goreleaser locally as well to test our builds. As methodaws uses cosign to sign our artifacts and Docker containers during our CI pipeline, we'll want to skip this step when running locally.</p> <pre><code>goreleaser release --snapshot --clean --skip sign\n</code></pre> <p>This should output binaries, distributable tarballs/zips, as well as docker images to your local machine's Docker registry.</p>"},{"location":"docs/index.html","title":"Capabilities","text":"<p>methodaws provides a number of capabilities to cyber security professionals working within AWS, spanning many of Amazon's most important resource types. Each of the below pages will provide you with a more in depth look at the methodaws capabilities related the specified resource.</p> <ul> <li>Current Instance</li> <li>EC2</li> <li>EKS</li> <li>IAM</li> <li>RDS</li> <li>Route53</li> <li>S3</li> <li>Security Group</li> <li>STS</li> <li>VPC</li> </ul>"},{"location":"docs/index.html#top-level-flags","title":"Top Level Flags","text":"<p>methodaws has several top level flags that can be used on any subcommand. These include:</p> <pre><code>Flags:\n  -h, --help                 help for methodaws\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/index.html#version-command","title":"Version Command","text":"<p>Run <code>methodaws version</code> to get the exact version information for your binary</p>"},{"location":"docs/index.html#output-formats","title":"Output Formats","text":"<p>For more information on the various output formats that are supported by methodaws, see the Output Formats page in our organization wide documentation.</p>"},{"location":"docs/current.html","title":"Current Instance Command","text":"<p>The <code>methodaws current</code> family of commands are intended to be used if you find yourself on a machine that you are unsure is an AWS VM or not. It provides a suite of capabilities and diagnostics related to the current instance, and whether or not it is part of AWS.</p>"},{"location":"docs/current.html#describe-current-instance","title":"Describe Current Instance","text":"<p>If used from an AWS EC2 instance, this command will gather information from the AWS Instance Metadata endpoint about the host, including private and public IP addresses and hostnames associated with the machine.</p>"},{"location":"docs/current.html#usage","title":"Usage","text":"<pre><code>methodaws current describe\n</code></pre>"},{"location":"docs/current.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws current describe --help\nDescribe the current AWS instance\n\nUsage:\n  methodaws current describe [flags]\n\nFlags:\n  -h, --help   help for describe\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/current.html#describe-current-instance-iam-roles","title":"Describe Current Instance IAM Roles","text":"<p>If used from an AWS EC2 instance, this command will gather information about any and all AWS IAM Roles that are attached to the endpoint. Information about IAM Policies that are attached to the Roles will be included as well, providing you with a complete picture of the host's permissions.</p>"},{"location":"docs/current.html#usage_1","title":"Usage","text":"<pre><code>methodaws current iam\n</code></pre>"},{"location":"docs/current.html#help-text_1","title":"Help Text","text":"<pre><code>$ methodaws current iam --help\nDescribe the IAM role of the current AWS instance\n\nUsage:\n  methodaws current iam [flags]\n\nFlags:\n  -h, --help   help for iam\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/ec2.html","title":"EC2","text":"<p>The <code>methodaws ec2</code> family of commands provide information about an account's EC2 instances.</p>"},{"location":"docs/ec2.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the EC2 instances that the provided credentials have access to.</p>"},{"location":"docs/ec2.html#usage","title":"Usage","text":"<pre><code>methodaws ec2 enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/ec2.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws ec2 enumerate -h\nEnumerate EC2 instances\n\nUsage:\n  methodaws ec2 enumerate [flags]\n\nFlags:\n  -h, --help   help for enumerate\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/eks.html","title":"EKS","text":"<p>The <code>methodaws eks</code> family of commands provide information about an account's EKS clusters.</p>"},{"location":"docs/eks.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the EKS clsuters that the provided credentials have access to.</p>"},{"location":"docs/eks.html#usage","title":"Usage","text":"<pre><code>methodaws eks enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/eks.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws eks enumerate -h\nEnumerate EKS instances\n\nUsage:\n  methodaws eks enumerate [flags]\n\nFlags:\n  -h, --help   help for enumerate\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/iam.html","title":"IAM","text":"<p>The <code>methodaws iam</code> family of commands provide information about an account's IAM roles and policies.</p>"},{"location":"docs/iam.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the IAM roles, along with their attached and/or inline policies, that the provided credentials have access to.</p>"},{"location":"docs/iam.html#usage","title":"Usage","text":"<pre><code>methodaws iam enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/iam.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws iam enumerate -h\nEnumerate IAM resources\n\nUsage:\n  methodaws iam enumerate [flags]\n\nFlags:\n  -h, --help   help for enumerate\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/rds.html","title":"RDS","text":"<p>The <code>methodaws rds</code> family of commands provide information about an account's RDS databases.</p>"},{"location":"docs/rds.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the RDS databases, that the provided credentials have access to.</p>"},{"location":"docs/rds.html#usage","title":"Usage","text":"<pre><code>methodaws rds enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/rds.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws rds enumerate -h\nEnumerate RDS instances in your AWS account.\n\nUsage:\n  methodaws rds enumerate [flags]\n\nFlags:\n  -h, --help   help for enumerate\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/route53.html","title":"Route53","text":"<p>The <code>methodaws route53</code> family of commands provide information about an account's Route53 DNS entries and hosted zones.</p>"},{"location":"docs/route53.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the Route53 hosted zones and DNS entries, that the provided credentials have access to.</p>"},{"location":"docs/route53.html#usage","title":"Usage","text":"<pre><code>methodaws route53 enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/route53.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws route53 enumerate --help\nEnumerate Route53 records\n\nUsage:\n  methodaws route53 enumerate [flags]\n\nFlags:\n  -h, --help   help for enumerate\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/s3.html","title":"S3","text":"<p>The <code>methodaws s3</code> family of commands provide information about an account's S3 buckets and their contents.</p>"},{"location":"docs/s3.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the S3 buckets that the provided credentials have access to.</p>"},{"location":"docs/s3.html#usage","title":"Usage","text":"<pre><code>methodaws s3 enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/s3.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws s3 enumerate -h\nEnumerate all S3 buckets in your AWS account.\n\nUsage:\n  methodaws s3 enumerate [flags]\n\nFlags:\n  -h, --help   help for enumerate\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/s3.html#ls","title":"ls","text":""},{"location":"docs/s3.html#usage_1","title":"Usage","text":"<pre><code>methodaws s3 ls --region us-east-1 --output json --name &lt;bucket name&gt;\n</code></pre>"},{"location":"docs/s3.html#help-text_1","title":"Help Text","text":"<pre><code>$ methodaws s3 ls -h\nList all objects in a single S3 bucket.\n\nUsage:\n  methodaws s3 ls [flags]\n\nFlags:\n  -h, --help          help for ls\n      --name string   Name of the S3 bucket\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/securitygroup.html","title":"Security Groups","text":"<p>The <code>methodaws securitygroup</code> family of commands provide information about an account's EC2 instances.</p>"},{"location":"docs/securitygroup.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the Security Groups that the provided credentials have access to.</p>"},{"location":"docs/securitygroup.html#usage","title":"Usage","text":"<pre><code>methodaws securitygroup enumerate --region us-east-1 --output json\n</code></pre> <pre><code>methodaws sg enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/securitygroup.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws securitygroup enumerate -h\nEnumerate security groups\n\nUsage:\n  methodaws securitygroup enumerate [flags]\n\nFlags:\n  -h, --help         help for enumerate\n      --vpc string   VPC ID to filter security groups by\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/sts.html","title":"STS","text":"<p>The <code>methodaws sts</code> family of commands provide common utilities that are leveraged by other commands when interacting with the AWS STS service.</p>"},{"location":"docs/sts.html#arn","title":"arn","text":"<p>The arn command returns the ARN of the caller. This is leveraged when information about the provided AWS IAM role or credentials are needed by other commands. Primarily necessary to provide a clean data picture and improving data integration quality.</p>"},{"location":"docs/sts.html#usage","title":"Usage","text":"<pre><code>methodaws vpc enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/sts.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws sts arn -h\nGet the caller ARN\n\nUsage:\n  methodaws sts arn [flags]\n\nFlags:\n  -h, --help   help for arn\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"docs/vpc.html","title":"VPC","text":"<p>The <code>methodaws vpc</code> family of commands provide information about an account's VPCs.</p>"},{"location":"docs/vpc.html#enumerate","title":"Enumerate","text":"<p>The enumerate command will gather information about all of the VPCs that the provided credentials have access to.</p>"},{"location":"docs/vpc.html#usage","title":"Usage","text":"<pre><code>methodaws vpc enumerate --region us-east-1 --output json\n</code></pre>"},{"location":"docs/vpc.html#help-text","title":"Help Text","text":"<pre><code>$ methodaws vpc enumerate -h\nEnumerate all VPCs in your AWS account.\n\nUsage:\n  methodaws vpc enumerate [flags]\n\nFlags:\n  -h, --help   help for enumerate\n\nGlobal Flags:\n  -o, --output string        Output format (signal, json, yaml). Default value is signal (default \"signal\")\n  -f, --output-file string   Path to output file. If blank, will output to STDOUT\n  -q, --quiet                Suppress output\n  -r, --region string        AWS region\n  -v, --verbose              Verbose output\n</code></pre>"},{"location":"getting-started/basic-usage.html","title":"Basic Usage","text":"<p>Before you get started, you will need to export AWS credentials that you want methodaws to utilize as environment variables. For more documentation on how to do this, please see the Amazon documentation here.</p>"},{"location":"getting-started/basic-usage.html#binaries","title":"Binaries","text":"<p>Running as a binary means you don't need to do anything additional for methodaws to leverage the environment variables you have already exported. You can test that things are working properly by running:</p> <pre><code>methodaws sts arn --region us-east-1\n</code></pre>"},{"location":"getting-started/basic-usage.html#docker","title":"Docker","text":"<p>Running methodaws within a Docker container requires that you pass the AWS credential environment variables into the container. This can be done with the following command:</p> <pre><code>docker run \\\n  -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \\\n  -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \\\n  -e AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \\\n  ghcr.io/method-security/methodaws:0.0.1 methodaws sts arn --region us-east-1 --output json\n</code></pre>"},{"location":"getting-started/installation.html","title":"Getting Started","text":"<p>If you are just getting started with methodaws, welcome! This guide will walk you through the process of going zero to one with the tool.</p>"},{"location":"getting-started/installation.html#installation","title":"Installation","text":"<p>methodaws is provided in several convenient form factors, including statically compiled binary images on a variety of architectures as well as a Docker image for both x86 and ARM machines.</p> <p>If you do not see an architecture that you require, please open a Discussion to propose adding it.</p>"},{"location":"getting-started/installation.html#binaries","title":"Binaries","text":"<p>methodaws currently supports statically compiled binaries across the following operating systems and architectures:</p> OS Architecture Linux 386 Linux arm (goarm 7) Linux amd64 Linux arm64 MacOS amd64 MacOS arm64 Windows amd64 <p>The latest binaries can be downloaded directly from Github.</p>"},{"location":"getting-started/installation.html#docker","title":"Docker","text":"<p>Docker images for methodaws are hosted in both Github Container Registry as well as on Docker Hub and can be pulled via:</p> <pre><code>docker pull ghcr.io/method-security/methodaws\n</code></pre> <pre><code>docker pull methodsecurity/methodaws\n</code></pre>"}]}